[quote=RNavega post_id=258617 time=1707193711 user_id=155226]
That's a cool IDE, it shows a stack / debug info, very useful. I code in Notepad++ like a peasant, it's just the text and that's it.

[quote=alejandroalzate post_id=258611 time=1707144998 user_id=177030]
Now parsed nodes work but the output is still nil, also i did a conscious decision of when there's no subtitle present at the time return an empty string witch ensures the same result as nil but avoiding to deal with nil on love.graphics.print() since for what i remember it doesn't like it
[/quote]
That's a good debate, should it return nil or an empty string when the current time isn't sampling any subtitle nodes (i.e. the blank time between nodes) ?

There are good reasons for either case: return an empty string so you can plug :getText() directly into love.graphics.print() and not have to worry about it returning nil:
[code]-- If returning an empty string.
love.graphics.print(mySubtitle:getText(), ...)[/code]

Or, return nil in case you want to use it in boolean expressions, as only false and nil are falsy values in Lua. Everything else, including zero and empty strings, are truthy.
[code]-- If returning nil.
local text = mySubtitle:getText()
if text then
    love.graphics.print(text, ...)
end[/code]
PS there was a bug with nil indexes, I updated that code with it.
[/quote]

In the IDE: that ide is called ZeroBraneStudio (For me is [b][i][color=#BFBFBF]0 brain studio[/color][/i][/b] lol) my choice is sublime but when a bug escapes my comprehension i go to zbstudio
In the debate: my library spits an empty string when there's no sub available in the time this ensures that the font methods getWidth and getHeight doesn't brick itself, and "[i]as only [color=#FF4040]false[/color] and [color=#FF4040]nil[/color] are falsy values in Lua. Everything else, including [color=#0040FF]zero[/color] and empty [color=#0040FF]strings[/color], are [color=#00FF00]truthy[/color].[/i]" for what i know [color=#FF8000]0[/color] is treated as [color=#FF0000]false[/color] as well, i might check but that is what i remember
I checked I've lived in a [b]lie[/b] :cry: :

[i]Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
> if 0 then
>> print("true")
>> else
>> print("false")
>> end
true[/i]

I know the clear oversight of an actual caption with and empty line but then that caption line is usseless anyway, so why bother for a real empty string.
my take when i do a check is
[code]
local isTextPresent = mySub:getText() ~= ""
[/code]
so i really want to keep the "empty string" behavior, since that bloated parse fucntion that you pointed out  the first thing that will do is just clearing [i][color=#FF0000]self[/color][/i].outputString to an empty string, if ANY condition fails the function avoids the heavy condition checks altogether